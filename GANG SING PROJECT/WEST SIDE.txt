import cv2
import mediapipe as mp

# Initialize MediaPipe Hands
mp_hands = mp.solutions.hands
hands = mp_hands.Hands(max_num_hands=1, min_detection_confidence=0.7)
mp_drawing = mp.solutions.drawing_utils

# Initialize OpenCV VideoCapture
cap = cv2.VideoCapture(0)

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # Convert the frame to RGB
    image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    # Process the image with MediaPipe Hands
    results = hands.process(image)

    # Convert the image back to BGR for OpenCV
    image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)

    if results.multi_hand_landmarks:
        for hand_landmarks in results.multi_hand_landmarks:
            # Draw the hand landmarks and connections
            mp_drawing.draw_landmarks(image, hand_landmarks, mp_hands.HAND_CONNECTIONS)

            # Get the coordinates of the middle finger tip (landmark 12) and the ring finger tip (landmark 16)
            middle_finger_tip = hand_landmarks.landmark[12]
            ring_finger_tip = hand_landmarks.landmark[16]

            # Check if the middle finger tip and ring finger tip are close to each other
            if abs(middle_finger_tip.x - ring_finger_tip.x) < 0.02 and abs(
                    middle_finger_tip.y - ring_finger_tip.y) < 0.02:
                # Draw a green box around the hand
                x_min, x_max = int(min(lm.x for lm in hand_landmarks.landmark) * image.shape[1]), int(
                    max(lm.x for lm in hand_landmarks.landmark) * image.shape[1])
                y_min, y_max = int(min(lm.y for lm in hand_landmarks.landmark) * image.shape[0]), int(
                    max(lm.y for lm in hand_landmarks.landmark) * image.shape[0])
                cv2.rectangle(image, (x_min, y_min), (x_max, y_max), (0, 255, 0), 2)

                # Display "WEST SIDE" on the screen
                cv2.putText(image, "WEST SIDE", (50, 100), cv2.FONT_HERSHEY_SIMPLEX, 2, (255, 255, 255), 9, cv2.LINE_AA)

    # Show the image
    cv2.imshow('Hand Detection', image)

    # Break the loop if 'q' is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the VideoCapture and close all OpenCV windows
cap.release()
cv2.destroyAllWindows()
